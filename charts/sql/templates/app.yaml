{{- if .Values.crossplaneApp }}
{{- else }}
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  labels:
    app: {{ .Chart.Name }}
spec:
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
    spec:
      containers:
      - name: {{ .Chart.Name }}
        image: {{ .Values.image }}
        ports:
        - containerPort: 8080
        livenessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        env:
        - name: DB_ENDPOINT
          valueFrom:
            secretKeyRef:
              name: {{ .Chart.Name }}
              key: endpoint
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Chart.Name }}
              key: password
        - name: DB_PORT
          valueFrom:
            secretKeyRef:
              name: {{ .Chart.Name }}
              key: port
        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: {{ .Chart.Name }}
              key: username
        - name: DB_NAME
          value: {{ .Chart.Name }}

---

apiVersion: v1
kind: Service
metadata:
  name: {{ .Chart.Name }}
  labels:
    app: {{ .Chart.Name }}
spec:
  type: ClusterIP
  ports:
  - port: 8080
    targetPort: 8080
    protocol: TCP
    name: http
  selector:
    app: {{ .Chart.Name }}

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Chart.Name }}
  labels:
    app: {{ .Chart.Name }}
  annotations:
    ingress.kubernetes.io/ssl-redirect: "false"
spec:
  rules:
  - http:
      paths:
      - pathType: ImplementationSpecific
        path: /
        backend:
          service:
            name: {{ .Chart.Name }}
            port:
              number: 8080
    host: {{ .Values.ingress.host }}
{{- end }}
